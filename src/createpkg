#!/bin/sh

#============================| INFO
# This file is part of a bigger project
# called archonpkg.
# It will shelter the functions to create
# packages with the extension .archon

# Script created by jean0t
# in 25/05/2024
# https://github.com/jean0t
#============================| GLOBAL VARIABLES
export pkg_extension="archon"

# desabiliting support to unicode
# for better performance
export LC_ALL=C
export LANG=C

#============================| FUNCTIONS
CHECK_PKG() {
	pkg_name="$@"

	# verify the extension of the file
	if ! echo ! "$pkg_name" | grep -q "\b${pkgext}\b$"; then
		printf "%s\n" "The extension must be: ${pkg_extension}"
		return 1
	fi

	# verify spaces in the name of the package
	if echo "$pkg_name" | grep -qE "[[:space:]]+"; then
		printf "%s\n" "The name of the package has spaces"
		printf "%s\n" "Aborting operation." 
		return 1
	fi

	# verify if the number of version and build exists
	# by counting the number of dashes - used
	verification=`echo "${pkg_name}" | grep -o "-" | wc -l`
	if [ "$verification" -lt '2' ] || [ "$verification" -gt '2' ]; then
		printf "%s\n" "The format of the name must be:"
		printf "%s\n" "name-version-build.${pkg_extension}"
		return 1
	fi
	
	return 0
}

CREATE_PKG() {
	pkg_name="$1" # receive the name of the package

	if [ "$VERBOSE" = '1' ]; then
		if tar -cvf ../${pkg_name} .; then
			printf "%s\n" "The package was created in ../${pkg_name}"
			return 0
		else
			printf "%s\n" "The package ${pkg_name} wasn't created."
			exit 1
		fi
	else
		if tar -cvf ../${pkg_name} .; then
			printf "%s\n" "The package was created in ../${pkg_name}"
			return 0
		else
			printf "%s\n" "The package ${pkg_name} was not created."
			exit 1
		fi
	fi
}

USAGE () {
	cat <<EOF
createpkg - OPTIONS

	create, -c
		Creates a package .archon. It has to be used inside the
		main directory to be generated. It will be generated one
		directory above.
		
	verbose, -v
		More detailed informations about the process.

Author: Jean0t
EOF
}
#============================| PARSER
if [ -z "$1" ]; then
	USAGE
fi

while [ -n "$1" ]; do
case "$1" in
	create|-c)
		CMD=$1
		shift
		;;

	verbose|-v)
		VERBOSE=1
		shift
		;;
		
	*.archon)
		PKG=$1
		shift
		;;

	*) 
		USAGE
		exit 0
		;;
esac
done

#============================| START
case "$CMD" in
	create|-c)
			shift
			if [ -z "$CMD" ]; then
				printf "%s\n" "No package was passed."
				exit 1
			fi
			CHECK_PKG "$PKG" || exit 1
			CREATE_PKG "$PKG"
		;;
esac

#============================| END
